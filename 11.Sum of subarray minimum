class Solution {
public:
    vector<int>findnse(vector<int>arr){
        int n=arr.size();
      vector<int>nse(n,n);
      
      stack<int>st;
      for(int i=n-1;i>=0;i--){
        while(!st.empty() and (arr[st.top()]>=arr[i])){
            st.pop();
        }
         if(!st.empty()){
            nse[i]=st.top();
        }
       st.push(i);
      }
       return nse;
    }
   vector<int>findpse(vector<int>arr){
     int n=arr.size();
      vector<int>pse(n,-1);
     
      stack<int>st;
      for(int i=0;i<n;i++){
        while(!st.empty() and (arr[st.top()]>arr[i])){
            st.pop();
        }
        if(!st.empty()){
            pse[i]=st.top();
        }
        st.push(i);
      }
      return pse;
    }
    int sumSubarrayMins(vector<int>& arr) {
       vector<int>nse=findnse(arr);
       vector<int>pse=findpse(arr);
       int total=0;
       int mod=(int)(1e9+7);
       int n=arr.size();
       for(int i=0;i<n;i++){
        int l=i-pse[i];
        int r=nse[i]-i;
        total=(total+(1ll*r*l*arr[i])%mod)%mod;
       }
       return total;
    }
};
